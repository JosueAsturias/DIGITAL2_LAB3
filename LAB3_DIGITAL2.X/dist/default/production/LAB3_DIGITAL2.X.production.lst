

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Feb 06 09:35:52 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0007                     _PORTCbits	set	7
   284  0007                     _PORTC	set	7
   285  0008                     _PORTD	set	8
   286  0087                     _TRISC	set	135
   287  0088                     _TRISD	set	136
   288                           
   289                           	psect	strings
   290  0003                     __pstrings:	
   291  0003                     stringtab:	
   292  0003                     __stringtab:	
   293  0003                     stringcode:	
   294                           ;	String table - string pointers are 1 byte each
   295                           
   296  0003                     stringdir:	
   297  0003  3000               	movlw	high stringdir
   298  0004  008A               	movwf	10
   299  0005  0804               	movf	4,w
   300  0006  0A84               	incf	4,f
   301  0007  0782               	addwf	2,f
   302  0008                     __stringbase:	
   303  0008  3400               	retlw	0
   304  0009                     __end_of__stringtab:	
   305  0009                     STR_1:	
   306  0009  3456               	retlw	86	;'V'
   307  000A  3461               	retlw	97	;'a'
   308  000B  346D               	retlw	109	;'m'
   309  000C  346F               	retlw	111	;'o'
   310  000D  346E               	retlw	110	;'n'
   311  000E  346F               	retlw	111	;'o'
   312  000F  3473               	retlw	115	;'s'
   313  0010  3420               	retlw	32	;' '
   314  0011  3470               	retlw	112	;'p'
   315  0012  3465               	retlw	101	;'e'
   316  0013  3472               	retlw	114	;'r'
   317  0014  3472               	retlw	114	;'r'
   318  0015  346F               	retlw	111	;'o'
   319  0016  3473               	retlw	115	;'s'
   320  0017  3400               	retlw	0
   321                           
   322                           ; #config settings
   323  0000                     
   324                           	psect	cinit
   325  07FC                     start_initialization:	
   326  07FC                     __initialization:	
   327  07FC                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  07FC                     __end_of__initialization:	
   331  07FC  0183               	clrf	3
   332  07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:	
   336  0070                     ?_LCD_init:	
   337  0070                     ?_LCD_home:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_LCD_Write_String:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_LCD_Cmd:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_LCD_Cmd:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_LCD_Write_Character:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_LCD_Write_Character:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	1
   361  0071                     LCD_Write_Character@caracter:	
   362                           
   363                           ; 1 bytes @ 0x1
   364  0071                     	ds	1
   365  0072                     ??_LCD_Write_String:	
   366  0072                     LCD_Cmd@comando:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     LCD_Write_String@n:	
   370                           ; 1 bytes @ 0x2
   371                           
   372                           
   373                           ; 2 bytes @ 0x2
   374  0072                     	ds	1
   375  0073                     ??_LCD_init:	
   376  0073                     ??_LCD_home:	
   377                           ; 1 bytes @ 0x3
   378                           
   379                           
   380                           ; 1 bytes @ 0x3
   381  0073                     	ds	1
   382  0074                     LCD_Write_String@a:	
   383                           
   384                           ; 1 bytes @ 0x4
   385  0074                     	ds	1
   386  0075                     ??_main:	
   387                           
   388                           	psect	maintext
   389  072B                     __pmaintext:	
   390                           ; 1 bytes @ 0x5
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 37 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels required when called:    2
   416 ;; This function calls:
   417 ;;		_LCD_Write_String
   418 ;;		_LCD_home
   419 ;;		_LCD_init
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _main
   427  072B                     _main:	
   428                           
   429                           ;main.c: 38:     TRISD = 0;
   430                           
   431                           ;incstack = 0
   432                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   433  072B  1683               	bsf	3,5	;RP0=1, select bank1
   434  072C  1303               	bcf	3,6	;RP1=0, select bank1
   435  072D  0188               	clrf	8	;volatile
   436                           
   437                           ;main.c: 39:     TRISC = 0;
   438  072E  0187               	clrf	7	;volatile
   439                           
   440                           ;main.c: 40:     PORTD = 0;
   441  072F  1283               	bcf	3,5	;RP0=0, select bank0
   442  0730  1303               	bcf	3,6	;RP1=0, select bank0
   443  0731  0188               	clrf	8	;volatile
   444                           
   445                           ;main.c: 41:     PORTC = 0;
   446  0732  0187               	clrf	7	;volatile
   447                           
   448                           ;main.c: 42:     LCD_init();
   449  0733  120A  118A  2795  120A  118A  	fcall	_LCD_init
   450  0738                     l722:	
   451                           
   452                           ;main.c: 45:         LCD_home();
   453  0738  120A  118A  2715  120A  118A  	fcall	_LCD_home
   454                           
   455                           ;main.c: 46:         LCD_Write_String("Vamonos perros");
   456  073D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   457  073E  120A  118A  2744  120A  118A  	fcall	_LCD_Write_String
   458  0743  2F38               	goto	l722
   459  0744                     __end_of_main:	
   460                           
   461                           	psect	text1
   462  0795                     __ptext1:	
   463 ;; *************** function _LCD_init *****************
   464 ;; Defined at:
   465 ;;		line 57 in file "LCD_8bits.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0, pclath, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0
   481 ;;      Temps:          2       0       0       0       0
   482 ;;      Totals:         2       0       0       0       0
   483 ;;Total ram usage:        2 bytes
   484 ;; Hardware stack levels used:    1
   485 ;; Hardware stack levels required when called:    1
   486 ;; This function calls:
   487 ;;		_LCD_Cmd
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _LCD_init
   495  0795                     _LCD_init:	
   496                           
   497                           ;LCD_8bits.c: 58:     _delay((unsigned long)((20)*(4000000/4000.0)));
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   501  0795  301A               	movlw	26
   502  0796  00F4               	movwf	??_LCD_init+1
   503  0797  30F8               	movlw	248
   504  0798  00F3               	movwf	??_LCD_init
   505  0799                     u37:	
   506  0799  0BF3               	decfsz	??_LCD_init,f
   507  079A  2F99               	goto	u37
   508  079B  0BF4               	decfsz	??_LCD_init+1,f
   509  079C  2F99               	goto	u37
   510  079D  0000               	nop
   511                           
   512                           ;LCD_8bits.c: 59:     LCD_Cmd(0x30);
   513  079E  3030               	movlw	48
   514  079F  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   515                           
   516                           ;LCD_8bits.c: 60:     _delay((unsigned long)((5)*(4000000/4000.0)));
   517  07A4  3007               	movlw	7
   518  07A5  00F4               	movwf	??_LCD_init+1
   519  07A6  307D               	movlw	125
   520  07A7  00F3               	movwf	??_LCD_init
   521  07A8                     u47:	
   522  07A8  0BF3               	decfsz	??_LCD_init,f
   523  07A9  2FA8               	goto	u47
   524  07AA  0BF4               	decfsz	??_LCD_init+1,f
   525  07AB  2FA8               	goto	u47
   526                           
   527                           ;LCD_8bits.c: 61:     LCD_Cmd(0x30);
   528  07AC  3030               	movlw	48
   529  07AD  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   530                           
   531                           ;LCD_8bits.c: 62:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   532  07B2  3021               	movlw	33
   533  07B3  00F3               	movwf	??_LCD_init
   534  07B4                     u57:	
   535  07B4  0BF3               	decfsz	??_LCD_init,f
   536  07B5  2FB4               	goto	u57
   537                           
   538                           ;LCD_8bits.c: 63:     LCD_Cmd(0x30);
   539  07B6  3030               	movlw	48
   540  07B7  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   541                           
   542                           ;LCD_8bits.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   543  07BC  3021               	movlw	33
   544  07BD  00F3               	movwf	??_LCD_init
   545  07BE                     u67:	
   546  07BE  0BF3               	decfsz	??_LCD_init,f
   547  07BF  2FBE               	goto	u67
   548                           
   549                           ;LCD_8bits.c: 65:     LCD_Cmd(0x38);
   550  07C0  3038               	movlw	56
   551  07C1  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   552                           
   553                           ;LCD_8bits.c: 66:     _delay((unsigned long)((53)*(4000000/4000000.0)));
   554  07C6  3011               	movlw	17
   555  07C7  00F3               	movwf	??_LCD_init
   556  07C8                     u77:	
   557  07C8  0BF3               	decfsz	??_LCD_init,f
   558  07C9  2FC8               	goto	u77
   559  07CA  0000               	nop
   560                           
   561                           ;LCD_8bits.c: 67:     LCD_Cmd(0x08);
   562  07CB  3008               	movlw	8
   563  07CC  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   564                           
   565                           ;LCD_8bits.c: 68:     _delay((unsigned long)((53)*(4000000/4000000.0)));
   566  07D1  3011               	movlw	17
   567  07D2  00F3               	movwf	??_LCD_init
   568  07D3                     u87:	
   569  07D3  0BF3               	decfsz	??_LCD_init,f
   570  07D4  2FD3               	goto	u87
   571  07D5  0000               	nop
   572                           
   573                           ;LCD_8bits.c: 69:     LCD_Cmd(0x01);
   574  07D6  3001               	movlw	1
   575  07D7  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   576                           
   577                           ;LCD_8bits.c: 70:     _delay((unsigned long)((3)*(4000000/4000.0)));
   578  07DC  3004               	movlw	4
   579  07DD  00F4               	movwf	??_LCD_init+1
   580  07DE  30E4               	movlw	228
   581  07DF  00F3               	movwf	??_LCD_init
   582  07E0                     u97:	
   583  07E0  0BF3               	decfsz	??_LCD_init,f
   584  07E1  2FE0               	goto	u97
   585  07E2  0BF4               	decfsz	??_LCD_init+1,f
   586  07E3  2FE0               	goto	u97
   587  07E4  0000               	nop
   588                           
   589                           ;LCD_8bits.c: 71:     LCD_Cmd(0x06);
   590  07E5  3006               	movlw	6
   591  07E6  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   592                           
   593                           ;LCD_8bits.c: 72:     _delay((unsigned long)((53)*(4000000/4000000.0)));
   594  07EB  3011               	movlw	17
   595  07EC  00F3               	movwf	??_LCD_init
   596  07ED                     u107:	
   597  07ED  0BF3               	decfsz	??_LCD_init,f
   598  07EE  2FED               	goto	u107
   599  07EF  0000               	nop
   600                           
   601                           ;LCD_8bits.c: 73:     LCD_Cmd(0x0C);
   602  07F0  300C               	movlw	12
   603  07F1  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   604                           
   605                           ;LCD_8bits.c: 74:     _delay((unsigned long)((53)*(4000000/4000000.0)));
   606  07F6  3011               	movlw	17
   607  07F7  00F3               	movwf	??_LCD_init
   608  07F8                     u117:	
   609  07F8  0BF3               	decfsz	??_LCD_init,f
   610  07F9  2FF8               	goto	u117
   611  07FA  0000               	nop
   612  07FB  0008               	return
   613  07FC                     __end_of_LCD_init:	
   614                           
   615                           	psect	text2
   616  0715                     __ptext2:	
   617 ;; *************** function _LCD_home *****************
   618 ;; Defined at:
   619 ;;		line 51 in file "LCD_8bits.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          2       0       0       0       0
   636 ;;      Totals:         2       0       0       0       0
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		_LCD_Cmd
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _LCD_home
   649  0715                     _LCD_home:	
   650                           
   651                           ;LCD_8bits.c: 52:     LCD_Cmd(0x00);
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _LCD_home: [wreg+status,2+status,0+pclath+cstack]
   655  0715  3000               	movlw	0
   656  0716  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   657                           
   658                           ;LCD_8bits.c: 53:     LCD_Cmd(0x02);
   659  071B  3002               	movlw	2
   660  071C  120A  118A  2766  120A  118A  	fcall	_LCD_Cmd
   661                           
   662                           ;LCD_8bits.c: 54:     _delay((unsigned long)((4)*(4000000/4000.0)));
   663  0721  3006               	movlw	6
   664  0722  00F4               	movwf	??_LCD_home+1
   665  0723  3030               	movlw	48
   666  0724  00F3               	movwf	??_LCD_home
   667  0725                     u127:	
   668  0725  0BF3               	decfsz	??_LCD_home,f
   669  0726  2F25               	goto	u127
   670  0727  0BF4               	decfsz	??_LCD_home+1,f
   671  0728  2F25               	goto	u127
   672  0729  0000               	nop
   673  072A  0008               	return
   674  072B                     __end_of_LCD_home:	
   675                           
   676                           	psect	text3
   677  0766                     __ptext3:	
   678 ;; *************** function _LCD_Cmd *****************
   679 ;; Defined at:
   680 ;;		line 33 in file "LCD_8bits.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  comando         1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  comando         1    2[COMMON] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_LCD_home
   704 ;;		_LCD_init
   705 ;;		_LCD_clear
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _LCD_Cmd
   711  0766                     _LCD_Cmd:	
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _LCD_Cmd: [wreg]
   715                           ;LCD_Cmd@comando stored from wreg
   716  0766  00F2               	movwf	LCD_Cmd@comando
   717                           
   718                           ;LCD_8bits.c: 34:     PORTCbits.RC0 = 0;
   719  0767  1283               	bcf	3,5	;RP0=0, select bank0
   720  0768  1303               	bcf	3,6	;RP1=0, select bank0
   721  0769  1007               	bcf	7,0	;volatile
   722                           
   723                           ;LCD_8bits.c: 35:     _delay((unsigned long)((5)*(4000000/4000.0)));
   724  076A  3007               	movlw	7
   725  076B  00F1               	movwf	??_LCD_Cmd+1
   726  076C  307D               	movlw	125
   727  076D  00F0               	movwf	??_LCD_Cmd
   728  076E                     u137:	
   729  076E  0BF0               	decfsz	??_LCD_Cmd,f
   730  076F  2F6E               	goto	u137
   731  0770  0BF1               	decfsz	??_LCD_Cmd+1,f
   732  0771  2F6E               	goto	u137
   733                           
   734                           ;LCD_8bits.c: 36:     PORTCbits.RC1 = 1;
   735  0772  1283               	bcf	3,5	;RP0=0, select bank0
   736  0773  1303               	bcf	3,6	;RP1=0, select bank0
   737  0774  1487               	bsf	7,1	;volatile
   738                           
   739                           ;LCD_8bits.c: 37:     _delay((unsigned long)((5)*(4000000/4000.0)));
   740  0775  3007               	movlw	7
   741  0776  00F1               	movwf	??_LCD_Cmd+1
   742  0777  307D               	movlw	125
   743  0778  00F0               	movwf	??_LCD_Cmd
   744  0779                     u147:	
   745  0779  0BF0               	decfsz	??_LCD_Cmd,f
   746  077A  2F79               	goto	u147
   747  077B  0BF1               	decfsz	??_LCD_Cmd+1,f
   748  077C  2F79               	goto	u147
   749                           
   750                           ;LCD_8bits.c: 39:     PORTD = comando;
   751  077D  0872               	movf	LCD_Cmd@comando,w
   752  077E  1283               	bcf	3,5	;RP0=0, select bank0
   753  077F  1303               	bcf	3,6	;RP1=0, select bank0
   754  0780  0088               	movwf	8	;volatile
   755                           
   756                           ;LCD_8bits.c: 40:     _delay((unsigned long)((5)*(4000000/4000.0)));
   757  0781  3007               	movlw	7
   758  0782  00F1               	movwf	??_LCD_Cmd+1
   759  0783  307D               	movlw	125
   760  0784  00F0               	movwf	??_LCD_Cmd
   761  0785                     u157:	
   762  0785  0BF0               	decfsz	??_LCD_Cmd,f
   763  0786  2F85               	goto	u157
   764  0787  0BF1               	decfsz	??_LCD_Cmd+1,f
   765  0788  2F85               	goto	u157
   766                           
   767                           ;LCD_8bits.c: 41:     PORTCbits.RC1 = 0;
   768  0789  1283               	bcf	3,5	;RP0=0, select bank0
   769  078A  1303               	bcf	3,6	;RP1=0, select bank0
   770  078B  1087               	bcf	7,1	;volatile
   771                           
   772                           ;LCD_8bits.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
   773  078C  3007               	movlw	7
   774  078D  00F1               	movwf	??_LCD_Cmd+1
   775  078E  307D               	movlw	125
   776  078F  00F0               	movwf	??_LCD_Cmd
   777  0790                     u167:	
   778  0790  0BF0               	decfsz	??_LCD_Cmd,f
   779  0791  2F90               	goto	u167
   780  0792  0BF1               	decfsz	??_LCD_Cmd+1,f
   781  0793  2F90               	goto	u167
   782  0794  0008               	return
   783  0795                     __end_of_LCD_Cmd:	
   784                           
   785                           	psect	text4
   786  0744                     __ptext4:	
   787 ;; *************** function _LCD_Write_String *****************
   788 ;; Defined at:
   789 ;;		line 86 in file "LCD_8bits.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  a               1    wreg     PTR unsigned char 
   792 ;;		 -> STR_1(15), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  a               1    4[COMMON] PTR unsigned char 
   795 ;;		 -> STR_1(15), 
   796 ;;  n               2    2[COMMON] int 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         3       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         3       0       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    1
   813 ;; This function calls:
   814 ;;		_LCD_Write_Character
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _LCD_Write_String
   822  0744                     _LCD_Write_String:	
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826                           ;LCD_Write_String@a stored from wreg
   827  0744  00F4               	movwf	LCD_Write_String@a
   828                           
   829                           ;LCD_8bits.c: 87:     int n;;LCD_8bits.c: 88:     for(n = 0; a[n] != '\0'; n++){
   830  0745  01F2               	clrf	LCD_Write_String@n
   831  0746  01F3               	clrf	LCD_Write_String@n+1
   832  0747                     l716:	
   833  0747  0872               	movf	LCD_Write_String@n,w
   834  0748  0774               	addwf	LCD_Write_String@a,w
   835  0749  0084               	movwf	4
   836  074A  120A  118A  2003  120A  118A  	fcall	stringdir
   837  074F  3A00               	xorlw	0
   838  0750  1903               	btfsc	3,2
   839  0751  0008               	return
   840                           
   841                           ;LCD_8bits.c: 89:         LCD_Write_Character(a[n]);
   842  0752  0872               	movf	LCD_Write_String@n,w
   843  0753  0774               	addwf	LCD_Write_String@a,w
   844  0754  0084               	movwf	4
   845  0755  120A  118A  2003  120A  118A  	fcall	stringdir
   846  075A  120A  118A  2706  120A  118A  	fcall	_LCD_Write_Character
   847                           
   848                           ;LCD_8bits.c: 90:     }
   849  075F  3001               	movlw	1
   850  0760  07F2               	addwf	LCD_Write_String@n,f
   851  0761  1803               	skipnc
   852  0762  0AF3               	incf	LCD_Write_String@n+1,f
   853  0763  3000               	movlw	0
   854  0764  07F3               	addwf	LCD_Write_String@n+1,f
   855  0765  2F47               	goto	l716
   856  0766                     __end_of_LCD_Write_String:	
   857                           
   858                           	psect	text5
   859  0706                     __ptext5:	
   860 ;; *************** function _LCD_Write_Character *****************
   861 ;; Defined at:
   862 ;;		line 77 in file "LCD_8bits.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  caracter        1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  caracter        1    1[COMMON] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0
   878 ;;      Temps:          1       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_LCD_Write_String
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _LCD_Write_Character
   891  0706                     _LCD_Write_Character:	
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _LCD_Write_Character: [wreg]
   895                           ;LCD_Write_Character@caracter stored from wreg
   896  0706  00F1               	movwf	LCD_Write_Character@caracter
   897                           
   898                           ;LCD_8bits.c: 78:     PORTCbits.RC0 = 1;
   899  0707  1283               	bcf	3,5	;RP0=0, select bank0
   900  0708  1303               	bcf	3,6	;RP1=0, select bank0
   901  0709  1407               	bsf	7,0	;volatile
   902                           
   903                           ;LCD_8bits.c: 80:     PORTD = caracter;
   904  070A  0871               	movf	LCD_Write_Character@caracter,w
   905  070B  0088               	movwf	8	;volatile
   906                           
   907                           ;LCD_8bits.c: 81:     PORTCbits.RC1 = 1;
   908  070C  1487               	bsf	7,1	;volatile
   909                           
   910                           ;LCD_8bits.c: 82:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   911  070D  300D               	movlw	13
   912  070E  00F0               	movwf	??_LCD_Write_Character
   913  070F                     u177:	
   914  070F  0BF0               	decfsz	??_LCD_Write_Character,f
   915  0710  2F0F               	goto	u177
   916                           
   917                           ;LCD_8bits.c: 83:     PORTCbits.RC1 = 0;
   918  0711  1283               	bcf	3,5	;RP0=0, select bank0
   919  0712  1303               	bcf	3,6	;RP1=0, select bank0
   920  0713  1087               	bcf	7,1	;volatile
   921  0714  0008               	return
   922  0715                     __end_of_LCD_Write_Character:	
   923  007E                     btemp	set	126	;btemp
   924  007E                     wtemp0	set	126


Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _main->_LCD_home
    _main->_LCD_init
    _LCD_init->_LCD_Cmd
    _LCD_home->_LCD_Cmd
    _LCD_Write_String->_LCD_Write_Character

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                   _LCD_Write_String
                           _LCD_home
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      15
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             2     2      0      15
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     138
                                              2 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Write_String
     _LCD_Write_Character
   _LCD_home
     _LCD_Cmd
   _LCD_init
     _LCD_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Feb 06 09:35:52 2020

                           pc 0002                   __CFG_CP$OFF 0000                            u37 0799  
                          u47 07A8                            u57 07B4                            u67 07BE  
                          u77 07C8                            u87 07D3                            u97 07E0  
                          fsr 0004                           l722 0738                           l716 0747  
                         u107 07ED                           u117 07F8                           u127 0725  
                         u137 076E                           u147 0779                           u157 0785  
                         u167 0790                           u177 070F                  __CFG_CPD$OFF 0000  
                         fsr0 0004  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 0795  
                __CFG_LVP$OFF 0000                          STR_1 0009                  __CFG_WRT$OFF 0000  
           ?_LCD_Write_String 0070                          _main 072B                          btemp 007E  
                        start 0000            ??_LCD_Write_String 0072                 __CFG_IESO$OFF 0000  
            __end_of_LCD_home 072B              __end_of_LCD_init 07FC                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _PORTC 0007                         _PORTD 0008  
                       _TRISC 0087                         _TRISD 0088                __CFG_FCMEN$OFF 0000  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E                __CFG_MCLRE$OFF 0000               __initialization 07FC  
                __end_of_main 0744                        ??_main 0075                     ??_LCD_Cmd 0070  
 LCD_Write_Character@caracter 0071                __CFG_PWRTE$OFF 0000       __end_of__initialization 07FC  
                   ?_LCD_home 0070                     ?_LCD_init 0070                __pcstackCOMMON 0070  
         _LCD_Write_Character 0706          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0072  
                  ??_LCD_home 0073                    ??_LCD_init 0073                    __pmaintext 072B  
   __size_of_LCD_Write_String 0022                       _LCD_Cmd 0766         ??_LCD_Write_Character 0070  
                  __stringtab 0003                       __ptext1 0795                       __ptext2 0715  
                     __ptext3 0766                       __ptext4 0744                       __ptext5 0706  
        end_of_initialization 07FC                     _PORTCbits 0007             LCD_Write_String@a 0074  
           LCD_Write_String@n 0072             __size_of_LCD_home 0016             __size_of_LCD_init 0067  
            _LCD_Write_String 0744           start_initialization 07FC      __CFG_FOSC$INTRC_NOCLKOUT 0000  
                    ?_LCD_Cmd 0070                     ___latbits 0002                     __pstrings 0003  
 __end_of_LCD_Write_Character 0715                      _LCD_home 0715                      _LCD_init 0795  
                 __stringbase 0008              __size_of_LCD_Cmd 002F      __end_of_LCD_Write_String 0766  
          __end_of__stringtab 0009             __CFG_BOR4V$BOR40V 0000                 __size_of_main 0019  
                   stringcode 0003                      stringdir 0003                      stringtab 0003  
