Version 4.0 HI-TECH Software Intermediate Code
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"543 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 543:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 542: typedef union {
[u S18 `S19 1 ]
[n S18 . . ]
"553
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 553: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x00C)));
[v _PIR1bits `VS18 ~T0 @X0 0 e@12 ]
"1708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1708:     struct {
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1707
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1707: typedef union {
[u S62 `S63 1 ]
[n S62 . . ]
"1718
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1718: extern volatile PIE1bits_t PIE1bits __attribute__((address(0x08C)));
[v _PIE1bits `VS62 ~T0 @X0 0 e@140 ]
[p mainexit ]
"1602
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1602: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1540
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1540: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"352
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 352: extern volatile unsigned char PORTD __attribute__((address(0x008)));
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 290: extern volatile unsigned char PORTC __attribute__((address(0x007)));
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"19 ./LCD_8bits.h
[; ;./LCD_8bits.h: 19: void LCD_init(void);
[v _LCD_init `(v ~T0 @X0 0 ef ]
"16 ./ADC.h
[; ;./ADC.h: 16: void ADConfig(uint8_t oscFreq,uint8_t canal, unsigned char justificado);
[v _ADConfig `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"22 ./LCD_8bits.h
[; ;./LCD_8bits.h: 22: void LCD_Set_Cursor(uint8_t linea, uint8_t columna);
[v _LCD_Set_Cursor `(v ~T0 @X0 0 ef2`uc`uc ]
"21
[; ;./LCD_8bits.h: 21: void LCD_Write_String(char *a);
[v _LCD_Write_String `(v ~T0 @X0 0 ef1`*uc ]
"15 ./UART.h
[; ;./UART.h: 15: uint8_t uartRC_init(uint16_t baudrate);
[v _uartRC_init `(uc ~T0 @X0 0 ef1`ui ]
"16
[; ;./UART.h: 16: char uartRC_Read();
[v _uartRC_Read `(uc ~T0 @X0 0 e? ]
[v F1256 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF1256 ~T0 @X0 0 e ]
[p i __delay ]
"18 ./ADC.h
[; ;./ADC.h: 18: uint8_t AnalogRead_8(unsigned char just);
[v _AnalogRead_8 `(uc ~T0 @X0 0 ef1`uc ]
"22
[; ;./ADC.h: 22: void ADC_CHselect(uint8_t canal);
[v _ADC_CHselect `(v ~T0 @X0 0 ef1`uc ]
"48 main.c
[; ;main.c: 48: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup);
[v _mapear `(*ui ~T0 @X0 0 ef3`uc`uc`uc ]
"20 ./LCD_8bits.h
[; ;./LCD_8bits.h: 20: void LCD_Write_Character(char caracter);
[v _LCD_Write_Character `(v ~T0 @X0 0 ef1`uc ]
"27
[; ;./LCD_8bits.h: 27: char uint_to_char(uint8_t numero);
[v _uint_to_char `(uc ~T0 @X0 0 ef1`uc ]
"1251 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1251:     struct {
[s S45 :1 `uc 1 :1 `uc 1 :4 `uc 1 :2 `uc 1 ]
[n S45 . ADON GO_nDONE CHS ADCS ]
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1257:     struct {
[s S46 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S46 . . GO CHS0 CHS1 CHS2 CHS3 ADCS0 ADCS1 ]
"1267
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1267:     struct {
[s S47 :1 `uc 1 :1 `uc 1 ]
[n S47 . . nDONE ]
"1271
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1271:     struct {
[s S48 :1 `uc 1 :1 `uc 1 ]
[n S48 . . GO_DONE ]
"1250
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1250: typedef union {
[u S44 `S45 1 `S46 1 `S47 1 `S48 1 ]
[n S44 . . . . . ]
"1276
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1276: extern volatile ADCON0bits_t ADCON0bits __attribute__((address(0x01F)));
[v _ADCON0bits `VS44 ~T0 @X0 0 e@31 ]
"28 ./LCD_8bits.h
[; ;./LCD_8bits.h: 28: uint16_t * uint_to_array(uint8_t numero);
[v _uint_to_array `(*ui ~T0 @X0 0 ef1`uc ]
"17 ./UART.h
[; ;./UART.h: 17: void uartTX_Write(char dato);
[v _uartTX_Write `(v ~T0 @X0 0 ef1`uc ]
"13 main.c
[p x FOSC = INTRC_NOCLKOUT ]
"14
[p x WDTE = OFF ]
"15
[p x PWRTE = OFF ]
"16
[p x MCLRE = OFF ]
"17
[p x CP = OFF ]
"18
[p x CPD = OFF ]
"19
[p x BOREN = OFF ]
"20
[p x IESO = OFF ]
"21
[p x FCMEN = OFF ]
"22
[p x LVP = OFF ]
"25
[p x BOR4V = BOR40V ]
"26
[p x WRT = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"37 main.c
[; ;main.c: 37: char linea2[12];
[v _linea2 `uc ~T0 @X0 -> 12 `i e ]
"38
[; ;main.c: 38: uint8_t valorADC_CH5 = 0;
[v _valorADC_CH5 `uc ~T0 @X0 1 e ]
[i _valorADC_CH5
-> -> 0 `i `uc
]
"39
[; ;main.c: 39: uint8_t banderaADC = 1;
[v _banderaADC `uc ~T0 @X0 1 e ]
[i _banderaADC
-> -> 1 `i `uc
]
"40
[; ;main.c: 40: uint8_t valorADC_CH0 = 0;
[v _valorADC_CH0 `uc ~T0 @X0 1 e ]
[i _valorADC_CH0
-> -> 0 `i `uc
]
"41
[; ;main.c: 41: uint16_t *num1;
[v _num1 `*ui ~T0 @X0 1 e ]
"42
[; ;main.c: 42: uint16_t *num2;
[v _num2 `*ui ~T0 @X0 1 e ]
"43
[; ;main.c: 43: uint16_t *num3;
[v _num3 `*ui ~T0 @X0 1 e ]
"44
[; ;main.c: 44: uint8_t banderaSerial = 0;
[v _banderaSerial `uc ~T0 @X0 1 e ]
[i _banderaSerial
-> -> 0 `i `uc
]
"45
[; ;main.c: 45: uint8_t contador = 0;
[v _contador `uc ~T0 @X0 1 e ]
[i _contador
-> -> 0 `i `uc
]
"46
[; ;main.c: 46: char valorSerial = 'E';
[v _valorSerial `uc ~T0 @X0 1 e ]
[i _valorSerial
-> -> 69 `ui `uc
]
[v $root$_ISR_ADC `(v ~T0 @X0 0 e ]
"51
[; ;main.c: 51: void __attribute__((picinterrupt(("")))) ISR_ADC(void){
[v _ISR_ADC `(v ~T1 @X0 1 ef ]
{
[e :U _ISR_ADC ]
[f ]
"52
[; ;main.c: 52:     if (PIR1bits.ADIF && PIE1bits.ADIE){
[e $ ! && != -> . . _PIR1bits 0 6 `i -> 0 `i != -> . . _PIE1bits 0 6 `i -> 0 `i 139  ]
{
"53
[; ;main.c: 53:         PIE1bits.ADIE = 0;
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"54
[; ;main.c: 54:         banderaADC = 1;
[e = _banderaADC -> -> 1 `i `uc ]
"55
[; ;main.c: 55:     }
}
[e :U 139 ]
"56
[; ;main.c: 56: }
[e :UE 138 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"58
[; ;main.c: 58: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"59
[; ;main.c: 59:     TRISD = 0;
[e = _TRISD -> -> 0 `i `uc ]
"60
[; ;main.c: 60:     TRISC = 0;
[e = _TRISC -> -> 0 `i `uc ]
"61
[; ;main.c: 61:     PORTD = 0;
[e = _PORTD -> -> 0 `i `uc ]
"62
[; ;main.c: 62:     PORTC = 0;
[e = _PORTC -> -> 0 `i `uc ]
"63
[; ;main.c: 63:     LCD_init();
[e ( _LCD_init ..  ]
"64
[; ;main.c: 64:     ADConfig(4, 5, 'H');
[e ( _ADConfig (3 , , -> -> 4 `i `uc -> -> 5 `i `uc -> -> 72 `ui `uc ]
"65
[; ;main.c: 65:     LCD_Set_Cursor(1,1);
[e ( _LCD_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"66
[; ;main.c: 66:     LCD_Write_String("S1    S2    S3");
[e ( _LCD_Write_String (1 :s 1C ]
"67
[; ;main.c: 67:     uartRC_init(300);
[e ( _uartRC_init (1 -> -> 300 `i `ui ]
"68
[; ;main.c: 68:     while(1){
[e :U 142 ]
{
"69
[; ;main.c: 69:         if(PIR1bits.RCIF == 1){
[e $ ! == -> . . _PIR1bits 0 5 `i -> 1 `i 144  ]
{
"70
[; ;main.c: 70:             valorSerial = uartRC_Read();
[e = _valorSerial ( _uartRC_Read ..  ]
"71
[; ;main.c: 71:             _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"72
[; ;main.c: 72:         }
}
[e :U 144 ]
"73
[; ;main.c: 73:         if (banderaADC == 1){
[e $ ! == -> _banderaADC `i -> 1 `i 145  ]
{
"74
[; ;main.c: 74:             switch (ADCON0bits.CHS){
[e $U 147  ]
{
"75
[; ;main.c: 75:                 case 5:
[e :U 148 ]
"76
[; ;main.c: 76:                     valorADC_CH5 = AnalogRead_8('H');
[e = _valorADC_CH5 ( _AnalogRead_8 (1 -> -> 72 `ui `uc ]
"77
[; ;main.c: 77:                     ADC_CHselect(0);
[e ( _ADC_CHselect (1 -> -> 0 `i `uc ]
"78
[; ;main.c: 78:                     num1 = mapear(valorADC_CH5, 255, 5);
[e = _num1 ( _mapear (3 , , _valorADC_CH5 -> -> 255 `i `uc -> -> 5 `i `uc ]
"79
[; ;main.c: 79:                     LCD_Set_Cursor(2, 0);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 0 `i `uc ]
"80
[; ;main.c: 80:                     LCD_Write_Character(uint_to_char(num1[0]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 0 `i `x -> -> # *U _num1 `i `x `uc ]
"81
[; ;main.c: 81:                     LCD_Write_Character('.');
[e ( _LCD_Write_Character (1 -> -> 46 `ui `uc ]
"82
[; ;main.c: 82:                     LCD_Write_Character(uint_to_char(num1[1]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 1 `i `x -> -> # *U _num1 `i `x `uc ]
"83
[; ;main.c: 83:                     LCD_Write_Character(uint_to_char(num1[2]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 2 `i `x -> -> # *U _num1 `i `x `uc ]
"84
[; ;main.c: 84:                     LCD_Write_Character('V');
[e ( _LCD_Write_Character (1 -> -> 86 `ui `uc ]
"86
[; ;main.c: 86:                     break;
[e $U 146  ]
"87
[; ;main.c: 87:                 case 0:
[e :U 149 ]
"88
[; ;main.c: 88:                     valorADC_CH0 = AnalogRead_8('H');
[e = _valorADC_CH0 ( _AnalogRead_8 (1 -> -> 72 `ui `uc ]
"89
[; ;main.c: 89:                     ADC_CHselect(5);
[e ( _ADC_CHselect (1 -> -> 5 `i `uc ]
"90
[; ;main.c: 90:                     num2 = mapear(valorADC_CH0, 255, 5);
[e = _num2 ( _mapear (3 , , _valorADC_CH0 -> -> 255 `i `uc -> -> 5 `i `uc ]
"91
[; ;main.c: 91:                     LCD_Set_Cursor(2, 6);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 6 `i `uc ]
"92
[; ;main.c: 92:                     LCD_Write_Character(uint_to_char(num2[0]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 0 `i `x -> -> # *U _num2 `i `x `uc ]
"93
[; ;main.c: 93:                     LCD_Write_Character('.');
[e ( _LCD_Write_Character (1 -> -> 46 `ui `uc ]
"94
[; ;main.c: 94:                     LCD_Write_Character(uint_to_char(num2[1]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 1 `i `x -> -> # *U _num2 `i `x `uc ]
"95
[; ;main.c: 95:                     LCD_Write_Character(uint_to_char(num2[2]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 2 `i `x -> -> # *U _num2 `i `x `uc ]
"96
[; ;main.c: 96:                     LCD_Write_Character('V');
[e ( _LCD_Write_Character (1 -> -> 86 `ui `uc ]
"98
[; ;main.c: 98:                     break;
[e $U 146  ]
"99
[; ;main.c: 99:                 default:
[e :U 150 ]
"100
[; ;main.c: 100:                     valorADC_CH0 = 0;
[e = _valorADC_CH0 -> -> 0 `i `uc ]
"101
[; ;main.c: 101:                     valorADC_CH5 = 0;
[e = _valorADC_CH5 -> -> 0 `i `uc ]
"102
[; ;main.c: 102:             }
}
[e $U 146  ]
[e :U 147 ]
[e [\ -> . . _ADCON0bits 0 2 `i , $ -> 5 `i 148
 , $ -> 0 `i 149
 150 ]
[e :U 146 ]
"103
[; ;main.c: 103:             banderaADC = 0;
[e = _banderaADC -> -> 0 `i `uc ]
"104
[; ;main.c: 104:             PIR1bits.ADIF = 0;
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"105
[; ;main.c: 105:             PIE1bits.ADIE = 1;
[e = . . _PIE1bits 0 6 -> -> 1 `i `uc ]
"106
[; ;main.c: 106:             ADCON0bits.GO_nDONE = 1;
[e = . . _ADCON0bits 0 1 -> -> 1 `i `uc ]
"107
[; ;main.c: 107:         }
}
[e :U 145 ]
"108
[; ;main.c: 108:             switch (valorSerial){
[e $U 152  ]
{
"109
[; ;main.c: 109:                 case 43:
[e :U 153 ]
"110
[; ;main.c: 110:                     contador ++;
[e ++ _contador -> -> 1 `i `uc ]
"111
[; ;main.c: 111:                     valorSerial = 0;
[e = _valorSerial -> -> 0 `i `uc ]
"112
[; ;main.c: 112:                     break;
[e $U 151  ]
"113
[; ;main.c: 113:                 case 45:
[e :U 154 ]
"114
[; ;main.c: 114:                     contador --;
[e -- _contador -> -> 1 `i `uc ]
"115
[; ;main.c: 115:                     valorSerial = 0;
[e = _valorSerial -> -> 0 `i `uc ]
"116
[; ;main.c: 116:                     break;
[e $U 151  ]
"117
[; ;main.c: 117:                 default:
[e :U 155 ]
"118
[; ;main.c: 118:                     contador = contador;
[e = _contador _contador ]
"119
[; ;main.c: 119:             }
}
[e $U 151  ]
[e :U 152 ]
[e [\ -> _valorSerial `i , $ -> 43 `i 153
 , $ -> 45 `i 154
 155 ]
[e :U 151 ]
"121
[; ;main.c: 121:             num3 = uint_to_array(contador);
[e = _num3 ( _uint_to_array (1 _contador ]
"122
[; ;main.c: 122:             LCD_Set_Cursor(2,13);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 13 `i `uc ]
"123
[; ;main.c: 123:             LCD_Write_Character(uint_to_char(num3[0]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 0 `i `x -> -> # *U _num3 `i `x `uc ]
"124
[; ;main.c: 124:             LCD_Write_Character(uint_to_char(num3[1]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 1 `i `x -> -> # *U _num3 `i `x `uc ]
"125
[; ;main.c: 125:             LCD_Write_Character(uint_to_char(num3[2]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 2 `i `x -> -> # *U _num3 `i `x `uc ]
"132
[; ;main.c: 132:             uartTX_Write(valorADC_CH5);
[e ( _uartTX_Write (1 -> _valorADC_CH5 `uc ]
"133
[; ;main.c: 133:             uartTX_Write(valorADC_CH0);
[e ( _uartTX_Write (1 -> _valorADC_CH0 `uc ]
"137
[; ;main.c: 137:     }
}
[e :U 141 ]
[e $U 142  ]
[e :U 143 ]
"138
[; ;main.c: 138:     return;
[e $UE 140  ]
"139
[; ;main.c: 139: }
[e :UE 140 ]
}
"142
[; ;main.c: 142: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup){
[v _mapear `(*ui ~T0 @X0 1 ef3`uc`uc`uc ]
{
[e :U _mapear ]
[v _valor `uc ~T0 @X0 1 r1 ]
[v _limReal `uc ~T0 @X0 1 r2 ]
[v _limSup `uc ~T0 @X0 1 r3 ]
[f ]
[v F1350 `ui ~T0 @X0 -> 3 `i s ]
[i F1350
:U ..
"143
[; ;main.c: 143:     uint16_t resultado[3] = {0,0,0};
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
]
[v _resultado `ui ~T0 @X0 -> 3 `i a ]
[e = _resultado F1350 ]
"144
[; ;main.c: 144:     uint16_t dividendo = valor*limSup;
[v _dividendo `ui ~T0 @X0 1 a ]
[e = _dividendo -> * -> _valor `i -> _limSup `i `ui ]
"145
[; ;main.c: 145:     while (limReal <= dividendo){
[e $U 157  ]
[e :U 158 ]
{
"146
[; ;main.c: 146:         resultado[0] = resultado[0] + 1;
[e = *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"147
[; ;main.c: 147:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"148
[; ;main.c: 148:     }
}
[e :U 157 ]
"145
[; ;main.c: 145:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 158  ]
[e :U 159 ]
"149
[; ;main.c: 149:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"150
[; ;main.c: 150:     while (limReal <= dividendo){
[e $U 160  ]
[e :U 161 ]
{
"151
[; ;main.c: 151:         resultado[1] = resultado[1] +1;
[e = *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"152
[; ;main.c: 152:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"153
[; ;main.c: 153:     }
}
[e :U 160 ]
"150
[; ;main.c: 150:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 161  ]
[e :U 162 ]
"154
[; ;main.c: 154:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"155
[; ;main.c: 155:     while (limReal <= dividendo){
[e $U 163  ]
[e :U 164 ]
{
"156
[; ;main.c: 156:         resultado[2] = resultado[2] +1;
[e = *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"157
[; ;main.c: 157:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"158
[; ;main.c: 158:     }
}
[e :U 163 ]
"155
[; ;main.c: 155:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 164  ]
[e :U 165 ]
"160
[; ;main.c: 160:     return resultado;
[e ) &U _resultado ]
[e $UE 156  ]
"161
[; ;main.c: 161: }
[e :UE 156 ]
}
[a 1C 83 49 32 32 32 32 83 50 32 32 32 32 83 51 0 ]
